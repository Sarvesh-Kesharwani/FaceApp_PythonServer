 """
    full_byte_string = []
    while True:
        print("Recieving Bytes...")
        part = clientsocket.recv(1)
        full_byte_string.append(part)
    print("Recieved Full String.")
    """


#now recieve photo_image
    #photo_bytes = clientsocket.recv(int(photo_length_string))

    full_byte_string = []
    while True:
        print("Recieving Bytes...")
        part = clientsocket.recv(1)
        full_byte_string.append(part)
    print("Recieved Full String.")

    photo_byte_array = np.array(full_byte_string)#####

    if not photo_bytes:
        print("PhotoByteArray is Empty!")
    else:
        print("Photo Image was Successfully Recieved.")
        print("Recieved Photo_Image is :"+str(photo_bytes))
        print("photobytes is of type: "+str(type(photo_bytes)))
        width = 500
        height = 333
        image = Image.frombytes("RGBA", (height, width), photo_byte_array )
        image.save("test.jpeg")





        ***************************************************
        #revieve photo's length

    photo_length_list = []
    while True:
        temp = clientsocket.recv(1).decode()
        if temp:
            if temp != 'E':
                photo_length_list.append(temp)
            else:
                print(temp)
                break
        else:
            print("Recieved Photo Length is empty!")

    #convert recieved 1-1 set of bytes into single string
    #which is nothing but length of photo_image
    print(str(photo_length_list))
    photo_length_string = ''.join(photo_length_list)
    print("PhotoLength is: "+ photo_length_string)
#########################################################



    #convert photo bytes to image
   # with open("image.jpeg", "wb") as img:
      #  img.write(photo_bytes)
    #message = clientsocket.recv(1024).decode()
    #clientsocket.send(bytes("Welcome to the server!", "utf-8"))
*************************************************************








bytesRead = 0
length = 0
buffer = []
baos = BAOS()
while length < photo_length:
    bytesRead = inn.read(buffer, 0, photo_length)  #int(Math.min(len(buffer), photo_length-length)
    length += bytesRead
    baos.write(buffer, 0, bytesRead)
    print("Writing to Stream...")

byteArray = np.array(baos.toByteArray())
fileName = "ReceivedFile"
file = File(fileName+str(Math.random()*500)+".jpg")
if not file:
    file.createNewFile()

fos = FileOutputStream(file)
fos.write(byteArray)
fos.close()
System.out.println("Image Received")
socket.close()
inn.close()


########################################
InputStream in = s.getInputStream();
                in.read();
#########################################



#########################################
#reading name in pyjnius
isr = InputStreamReader(s.getInputStream())
br = BufferedReader(isr) #use a streamreader which reads data in bytes

#reading name
innn = s.getInputStream()

buff = [1]
while True:
    innn.read(buff, 0, 1)# replace this line with code_to_read_one-one byte
    if buff != "#$":
        temp = np.array(buff)
        print(temp)
    else:
        break

name_string = np.array(buff)
print("Name is:"+name_string)
#########################################






















print(tempbytes)
print(type(tempbytes))


# PNG data
LEFT_THUMB = (
    '\x89\x50\x4E\x47\x0D\x0A\x1A\x0A\x00\x00\x00\x0D\x49\x48\x44\x52\x00\x00'
    '\x00\x13\x00\x00\x00\x0B\x08\x06\x00\x00\x00\x9D\xD5\xB6\x3A\x00\x00\x01'
    '\x2E\x49\x44\x41\x54\x78\x9C\x95\xD2\x31\x6B\xC2\x40\x00\x05\xE0\x77\x10'
    '\x42\x09\x34\xD0\x29\x21\x82\xC9\x9C\x2E\x72\x4B\x87\x40\x50\xB9\xBF\x5B'
    '\x28\x35\xA1\xA4\x94\x76\x68\x1C\x1C\x74\xCD\x9A\xE8\x20\x0A\x12\xA5\x5A'
    '\xE4\x72\xC9\x75\x10\x6D\xDC\xCE\xF7\x03\x3E\xDE\x83\x47\xA4\x94\x68\x67'
    '\xB5\xD9\x4E\xBF\xBF\x3E\xE8\x78\x3C\x86\x6A\x3C\xCF\x43\x10\x04\x20\x6D'
    '\x6C\xB5\xD9\x4E\x93\xF8\x95\x5A\x96\x05\xC6\x98\x32\x56\x14\x05\x46\xA3'
    '\x11\xB4\x36\x14\xBD\x3C\xD3\x4E\xA7\x03\xC6\x18\x8E\xC7\x23\x9A\xA6\x51'
    '\xC2\x5C\xD7\x45\x9E\xE7\x27\xEC\x0C\x39\x8E\x03\xC6\x18\x0E\x87\x83\x32'
    '\x04\x00\xE7\x75\x1A\xE7\x7C\xF2\xF9\xFE\x46\x6D\xDB\x06\x63\x0C\xFB\xFD'
    '\x1E\x75\x5D\x2B\x43\x57\x58\xF9\xF3\xAB\xAD\xD7\x6B\x98\xA6\x09\x21\x04'
    '\x76\xBB\x1D\x84\x10\x37\x61\x86\x61\x9C\x30\x00\x70\x1C\x07\x49\x92\x80'
    '\x10\x82\x7E\xBF\x8F\xE5\x72\x79\x13\x78\x69\xF6\x70\x6F\x88\x5E\xAF\x37'
    '\x2B\xCB\x92\xC6\x71\x0C\x42\x08\xC2\x30\xC4\x7C\x3E\x57\x06\x2F\x98\xAE'
    '\xEB\x4F\xAE\xEB\x4E\x06\x83\xC1\x4C\x4A\x49\xA3\x28\x82\x94\x12\x61\x18'
    '\x2A\x37\x5B\x2C\x16\xE8\x76\xBB\xFF\x3F\xE3\x9C\x4F\x8A\xA2\xD0\xD2\x34'
    '\xA5\x59\x96\xA1\xAA\x2A\x65\xCC\xB2\x2C\x0C\x87\xC3\xEB\xD3\x9E\xC1\xAA'
    '\xAA\xEE\x38\xE7\x4A\x90\xAE\xEB\x00\x00\xDF\xF7\x1F\xFF\x00\x09\x7C\xA7'
    '\x93\xB1\xFB\xFA\x11\x00\x00\x00\x00\x49\x45\x4E\x44\xAE\x42\x60\x82'
)

# creating an image object
im = Image.open(r"C:\Users\Sarvesh_Kesharwani\Downloads\avatar.png")
im1 = im.tobytes("xbm", "rgb")
print(im1)
print("Image size is:"+str(im.size))



''''
img = Image.frombuffer("L", (900,860), im1, 'raw', "L", 0, 1)
img.save("testo.png")


width = 500
height = 333
image = Image.frombytes('RGBA', (128,128), tempbytes, 'raw')
print(type(LEFT_THUMB))
'''

def convert_string_to_bytes(string):
    bytes = b''
    for i in string:
        bytes += struct.pack("B", ord(i))
    return bytes

stream = BytesIO(tempbytes)
#stream = BytesIO(convert_string_to_bytes(LEFT_THUMB))

image = Image.open(stream).convert("RGBA")
stream.close()
image.save('out.png')









'''
#################################################################################1st pyjnius socket connection.
#photo length is available in photo_length_int var.
#Reading Photo in Pyjnius

#making connection
HOST = "192.168.43.205"
Port = 1234

server = ServerSocket(Port)
System.out.println("Server started")
System.out.println("Waiting for a client ...")
socket = server.accept()
print("Client accepted")
#connection made

#pouring connection input stream into datainputstream
bis = BIS(socket.getInputStream())
dos = DOS(bis)
#Reading photo from dataipnutstream
bytesRead = 0
length = 0
buffer = []
buffer_length = 8192
baos = BAOS()

print("Reading Photo From Stream...")
while length < photo_length_int:
    bytesRead = dos.read(buffer, 0, int(Math.min(buffer_length, photo_length_int-length)))
    length += bytesRead
    #baos.write(buffer, 0, bytesRead)
    print("...")

byteArray = baos.toByteArray()
fileName = "MyFirstReceivedFile"
file = File(fileName+str(Math.random()*500)+".jpg")
if not file:
    file.createNewFile()

fos = FileOutputStream(file)
fos.write(byteArray)
fos.close()
print("Image Received")
s.close()


'''